<div class="floor">
  <div class="inner-nrw">

<h1 class="ratherloud-heading">Meet our speakers!</h1>
<p>Two days, one track, 16 speakers with 16 talks!</p>

<ul class="rebels">
  <li class="group">
    <div class="rebel-bio">
      <a name="barbarabermes"></a>
      <img class="rebel-img" src="/img/rebels/barbarabermes.jpg" alt="Barbara Bermes">
      <h3 class="rebel-name ratherloud-rebel">Barbara Bermes</h3>
      <p><a href="http://twitter.com/bbinto">Barbara</a> oversees the development of OANDA’s next-generation APIs. She acts as the internal and external evangelist for the API product suite as well as OANDA’s developer community. Prior to joining OANDA, Barbara worked as senior architect and performance advocate at the Canadian Broadcasting Corporation (CBC) where she focused on mobile web development and performance optimization. She holds an honours BSc from the Bonn-Rhein-Sieg University of Applied Sciences, Germany.</p>
      <p>Barbara is an international speaker, a book author, a contributor to jsmanners and the organizer of the Toronto Web Performance Meetup Group.</p>
    <h3 class="ratherloud-heading c3 cf"><span class="rwd-line">Third Party Footprint:</span> Evaluating the Performance of&nbsp;External Scripts</h3>
    <p>Copy, paste, but don’t block the rendering!
    It’s almost impossible to find a website that doesn’t utilize any kind
    of embedded widgets such as ads, social plugins, or analytics: All of
    these add-ons are considered 3rd party scripts and promise to increase
    and benefit publisher’s revenue. Publishers don’t have much control over
    the provider’s code and inevitably just have to trust their integrity,
    content security policy, code quality, and performance.</p>
    <p>Imagine a high-traffic website hosting a twitter widget: Are publishers
    aware that a sudden twitter server outage could potentially bring down
    their site if the widget is not properly included?
    </p>
    <p>The performance and availability of 3rd party scripts don’t have to
    become a threat or a nightmare for publishers. Barbara’s talk will not
    only outline best practices, tools, and tricks on how to sandbox 3rd
    party scripts, but also help the audience understand bottlenecks,
    determine potential risks, and elaborate on how to measure their
    performance.</p>
    <p>Following this session, managers and developers will be equipped to ask
    the right questions when choosing 3rd party providers, while developers
    will be armed with guidelines on how to integrate 3rd party snippets
    efficiently into their deployment process without slowing down or even
    bringing down their site. <a class="video-link" href="https://vimeo.com/128742907">Go watch the video of Barbara’s talk&nbsp;<span class="arr">➡</span></a></p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="brianjbrennan"></a>
      <img class="rebel-img" src="/img/rebels/brianjbrennan.jpg" alt="Brian J Brennan">
      <h3 class="rebel-name ratherloud-rebel">Brian J Brennan</h3>
         <p>First and foremost an amateur cat photographer, Brian’s second passion
         is music. After a short stint as a college radio DJ, Brian taught
         himself to play bass and in the last 10 years has played for a handful
         of bands of varying notoriety. His most recent project, a shoegaze
         band out of Brooklyn called Eastern Hollows, is planning to release
         their second full length in the summer of 2015.</p>
         
         <p>When not playing music Brian tries his best to make a positive
         contribution the New York developer community as a co-founder and
         organizer of BrooklynJS, a monthly user group featuring talks, musical
         performance and terrible jokes.
      </p>
      <h3 class="ratherloud-heading c3 cf">Ladies and Gentlemen We Are Floating in Cyberspace</h3>
      <p>Learning to be a better developer through the teachings of Black Flag,
      My Bloody Valentine, and John Cage. <a class="video-link" href="https://vimeo.com/128767310">Go watch the video of Brian’s talk&nbsp;<span class="arr">➡</span></a></p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="brittanystoroz"></a>
      <img class="rebel-img" src="/img/rebels/brittanystoroz.jpg" alt="Brittany Storoz">
      <h3 class="rebel-name ratherloud-rebel">Brittany Storoz</h3>
         <p>Brittany is a Senior Engineer at Mozilla, working to ease developer
         struggles with modern app development. She believes in life, liberty and
         the pursuit of happiness, and has been known to pick up pencils with her
         toes. She also writes a lot of JavaScript.</p>

         <h3 class="ratherloud-heading c3 cf">Intelligent Design:
         Application Architecture of the Human Body</h3>
         <p>Over time, we've developed solid conventions and best practices for
         building our applications with a sustainable architecture. We've
         explained them in writing and highlighted them in demonstrative apps,
         but the most exemplary instance of application architecture will not be
         found in the pages of a book or code in a text editor.</p>
         <p>Rather, it's found in the modularity of our organs. It's found in the
         speed of complex communication between our brains and our bodies. It's
         found in the processes like breathing and blinking that run seamlessly
         in our backgrounds.</p>
         <p>Our bodies consistently demonstrate the best practices and patterns we
         aim for in our software every day. Let's investigate how our biology
         makes the most irrefutable case for the designs we've come to value in
         application development. <a class="video-link" href="https://vimeo.com/128772581">Go watch the video of Brittany’s talk&nbsp;<span class="arr">➡</span></a></p>
         </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="cjsilverio"></a>
      <img class="rebel-img" src="/img/rebels/cjsilverio.jpg" alt="C J Silverio">
      <h3 class="rebel-name ratherloud-rebel">C J Silverio</h3>
      <p>C J Silverio has worked for many Silicon Valley startups, writing everything from smart cellphone apps to web servers to user interface design to in browser web apps, with a recent focus on node.js services. She currently leads dev/ops for npm Inc.
      </p>
      <h3 class="ratherloud-heading c3">Cheating Gall’s Law</h3>
      <p>Or, how we split a monolith and lived to tell the tale.<br> 
      This is the story of how npm replaced its monolithic registry service with
      microservices. We rolled out the registry without any users noticing
      this huge change behind the scenes. How did we manage this? What did we
      mess up? What can you learn from our experience?
      <a class="video-link" href="https://vimeo.com/128796804">Go watch the video of CJ’s talk&nbsp;<span class="arr">➡</span></a>
      </p>      
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="christianjohansen"></a>
      <img class="rebel-img" src="/img/rebels/christianjohansen.jpg" alt="Christian Johansen">
      <h3 class="rebel-name ratherloud-rebel">Christian Johansen</h3>
         <p>Christian is a passionate programmer working with Oslo-based consultancy
            Kodemaker. He's a man of eclectic background, having worked with
            everything from Unix systems tuning and ops to various server-side
            applications and JavaScript heavy frontend development. 
            </p><p>
            Christian is the
            author of "Test-Driven JavaScript Development", and he maintains several
            open source projects, including the popular mocking framework Sinon.JS.
            Emacs and Lisp turned him onto functional programming many years ago,
            and Clojure/ClojureScript has deepened his fascination with the subject.
         </p>
         <h3 class="ratherloud-heading c3">Immutable JavaScript</h3>
         <p>When it comes to functional programming techniques seeing widespread
            adoption in the JavaScript community, immutability is a strong contender
            for "next in line". In this talk I'll show you what immutability is all
            about, why it's useful, and how to work with it. We'll even put
            immutability to work in a React app and observe how we can reduce
            complexity while increasing performance.
            <a class="video-link" href="https://vimeo.com/128790457">Go watch the video of Christian’s talk&nbsp;<span class="arr">➡</span></a>
         </p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="daleharvey"></a>
      <img class="rebel-img" src="/img/rebels/daleharvey.jpg" alt="Dale Harvey">
      <h3 class="rebel-name ratherloud-rebel">Dale Harvey</h3>
      <p>Dale is a senior developer on the Firefox OS project for Mozilla, a long time CouchDB contributor, PouchDB maintainer and is generally interested in working on Open Source and the Open Web.</p>
    <h3 class="ratherloud-heading c3">The Native Web</h3>
    <p>The web is slowly becoming more capable however the experiences it
    provides still generally fall far behind what native applications are
    already doing. I want to take a look at how offline architectures can
    help bring the best experiences to your users and discuss the
    technologies, from appcache and service workers to PouchDB that will
    help you build the native web. <a class="video-link" href="https://vimeo.com/128739471">Go watch the video of Dale’s talk&nbsp;<span class="arr">➡</span></a></p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="davidrousset"></a>
      <img class="rebel-img" src="/img/rebels/davidrousset.jpg" alt="David Rousset">
      <h3 class="rebel-name ratherloud-rebel">David Rousset</h3>
      <p>David is a Senior Program Manager working for Microsoft Corp, in charge
         of driving adoption of HTML5 standards. He’s speaking in several famous
         web conferences such as Paris Web, CodeMotion, ReasonsTo or jQuery UK.
         He’s the co-author of the WebGL Babylon.js open-source engine. Read his
         <a href="http://blogs.msdn.com/davrous">blog on MSDN</a> or follow <a href="https://twitter.com/davrous">him on Twitter</a>.
      </p>
      <h3 class="ratherloud-heading c3 cf">Creating immersive 3D and audio web experiences with Babylon.js</h3>
      <p>During this session, we will see thanks to babylon.js, a
      free & open source engine written in TypeScript, how we can easily
      create and use 3D content with associated sounds directly with
      JavaScript. We will also see how to interact with DCC tools like Unity
      or Blender to work with 3D designer. Spatial sounds, gamepad, physics
      effects: all those goodies are available for you in a few lines of code!
      Demos will be done in our latest browser engine.
      <a class="video-link" href="https://vimeo.com/128798201">Go watch the video of David’s talk&nbsp;<span class="arr">➡</span></a>
      </p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="fergusmcdowall"></a>
      <img class="rebel-img" src="/img/rebels/fergusmcdowall.jpg" alt="Fergus McDowall">
      <h3 class="rebel-name ratherloud-rebel">Fergus McDowall</h3>
      <p>Fergus is a senior consultant at Comperio who likes to make stuff in JavaScript. He is the author of Norch, Search-Index, and many other songs of code. A co-founder of The Oslo Bike Kitchen, he can often be found taking things apart and putting them back together again.</p>
      <h3 class="ratherloud-heading c3 cf">An introduction to search-index.js</h3>
      <p>Search-index is a module for doing free-text search in Javascript. In
      this talk we will explore various approaches to indexing data on the
      server and in the browser. We will show how search-index integrates
      with other technologies presented at WebRebels such as Browserify, the
      Level family, PouchDB and NPM, together with code examples. The talk
      should serve as a jumping off point for engineers looking to use
      search-index, and creative types who want to create new concepts
      around "Small Data". <a class="video-link" href="https://vimeo.com/128787918">Go watch the video of Fergus’ talk&nbsp;<span class="arr">➡</span></a></p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="jennschiffer"></a>
      <img class="rebel-img" src="/img/rebels/jennschiffer.jpg" alt="Jenn Schiffer">
      <h3 class="rebel-name ratherloud-rebel">Jenn Schiffer</h3>
      <p><a href="http://jennmoney.biz/">Jenn Schiffer</a> is an open web engineer at Bocoup who creates art, and tools facilitating the creation and learning of art, using code and other aspects of technology.</p>
      <h3 class="ratherloud-heading c3">Who Visualized the&nbsp;Bomp?</h3>
      <p>Imagine a world where dolphins could walk. Now forget that and then
      imagine a world where you had the power to create musical and art
      experiences in the browser for free, without expensive software or hired
      contractors. I'm going to talk about creating web-based audio-powered
      visualizations using weird "technologies" like "C.S.S." and "JavaScript"
      and "code." <a class="video-link" href="https://vimeo.com/128748712">Go watch the video of Jenn’s talk&nbsp;<span class="arr">➡</span></a></p>   
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="larsthansen"></a>
      <img class="rebel-img" src="/img/rebels/larsthansen.jpg" alt="Lars Hansen">
      <h3 class="rebel-name ratherloud-rebel">Lars Hansen</h3>
      <p>Lars has worked on Javascript engines for many years — at Opera, at Adobe, and now at Mozilla, 
      where he works on shared-memory and multicore technologies for JS and asm.js.
      </p>
      <h3 class="ratherloud-heading c3">Shared-memory multicore computation in&nbsp;JavaScript</h3>
      <p>My phone has four cores, my laptop has eight, and my workstation has
      sixteen, but my scripts can only easily use one core at a time.  We need
      to give JavaScript access to the full power of the machine, if web apps
      are to remain as capable as native apps.  Workers communicating with
      events and marshaled data are safe, but slow and awkward; Parallel JS is
      also safe, but again slow and awkward.  The power remains locked away.
      So what are we to do?</p>
      <p>Suppose we sacrifice a little safety for a lot of performance: We give
      JavaScript workers access to shared memory, and let them truly share
      data and communicate through the shared memory.  A low-level framework
      is all we need initially; libraries can provide data-parallel
      abstractions, task queues, synchronization, and similar.  Such a
      framework is available in Firefox Nightly now, and I will present it and
      demo some things we can do with it. 
      <a class="video-link" href="https://vimeo.com/128795311">Go watch the video of Lars’ talk&nbsp;<span class="arr">➡</span></a></p>        
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="lindasandvik"></a>
      <img class="rebel-img" src="/img/rebels/lindasandvik.jpg" alt="Linda Sandvik">
      <h3 class="rebel-name ratherloud-rebel">Linda Sandvik</h3>
      <p>Linda Sandvik is a Knight-Mozilla OpenNews fellow at the Guardian, a creative technologist and proto-MacGyver who likes to make things that inform, educate, and empower people and communities. She previously worked in local government and at Last.fm, and co-founded Code Club. Her particular interests lie in using play and technology to help people discover their natural affinity for teaching themselves new things. She has a passion for open data, open knowledge, and serious games.
      </p>
      <h3 class="ratherloud-heading c3">Raising the next generation of rebels</h3>
      <p>Are your kids learning how to code? Whatever job they'll have in the
      future knowledge of how computers work is going to be an advantage.
      Several countries have already introduced compulsory computing in
      schools, but Norway is currently lagging behind. Who gets to decide
      what is being taught? Should we let tech giants like Google or
      Facebook do it in after school clubs? If we leave the education to
      them can we trust them to also teach about corporate mass
      surveillance? What about civic tech? If the goal is not to produce new
      workerbees for these institutions but rather create a society of tech
      savvy rebels who will change the world for the better, what should we
      do? <a class="video-link" href="https://vimeo.com/128858107">Go watch the video of Linda’s talk&nbsp;<span class="arr">➡</span></a>
      </p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="maireadbuchan"></a>
      <img class="rebel-img" src="/img/rebels/maireadbuchan.jpg" alt="Mairead Buchan">
      <h3 class="rebel-name ratherloud-rebel">Mairead Buchan</h3>
      <p>Mairead is a creative web developer, based in London, specialising in
         exciting interactive experiences and interested in any technology that
         pushes the boundaries of web development. She specialises in Front End
         web development technologies, JavaScript, Responsive, Mobile and UI
         interactions. Mairead is a designer as well as a developer, when not
         making web applications she likes to make other things: Costume design,
         Set design, Game design and other toys.</p>
         <h3 class="ratherloud-heading c3 cf">VR in the browser with Leap motion and Google cardboard</h3>
         <p>A walk through the technologies required to create a VR
         simulation with user interaction inside a browser. My application uses
         the Leap motion Javascript API and plugin ecosystem to create a moving
         hand with bone rigging on a mobile device over WebRTC. The VR headset
         display is created using the Three.Js library to create a split screen
         stereo view for a Google Cardboard and the Device Orientation control
         plugin to tap into accelerometer data from a mobile device.
         <a class="video-link" href="https://vimeo.com/128857357">Go watch the video of Mairead’s talk&nbsp;<span class="arr">➡</span></a>
         </p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="mathiasbynens"></a>
      <img class="rebel-img" src="/img/rebels/mathiasbynens.jpg" alt="Mathias Bynens">
      <h3 class="rebel-name ratherloud-rebel">Mathias Bynens</h3>
      <p>Mathias is a Belgian web standards freak. He likes HTML, CSS, JavaScript, Unicode, performance, and security. At Opera Software he’s a member of the Developer Relations team.</p>
      <h3 class="ratherloud-heading c3 cf">JavaScript <span class="c1">♥</span>&nbsp;Unicode</h3>
      <p>
      In this talk we’ll take a look at the various ways JavaScript relies
      on Unicode, what the consequences are for JavaScript developers
      wishing to support full Unicode, and how the upcoming ECMAScript 6 (or
      ES 2015 as it’s being called nowadays) will improve this.
      <a class="video-link" href="https://vimeo.com/128973107">Go watch the video of Mathias’ talk&nbsp;<span class="arr">➡</span></a>
      </p>      
    </div>
  </li>
    <li class="group">
    <div class="rebel-bio">
      <a name="matthewpodwysocki"></a>
      <img class="rebel-img" src="/img/rebels/matthewpodwysocki.jpg" alt="Matthew Podwysocki">
      <h3 class="rebel-name ratherloud-rebel">Matthew Podwysocki</h3>
      <p>Matthew Podwysocki is a Software Engineer and self-described Open
         Sourcerer at Microsoft.  He currently works on the Reactive Extensions
         for all platforms and the Thali Project exploring the Internet of Things
         and Privacy.  He is passionate about open source, helping such efforts
         as Microsoft support of Node.js.  He also spends his free time helping
         teach the next generation of software developers through STEM outreach.</p>
         <h3 class="ratherloud-heading c3 cf">Async Programming at Netflix</h3>
         <p>What’s does a mouse drag event have in common with an Array of numbers?
         The answer to this question may surprise you: they are both collections.</p>
         <p>This key insight holds the key to dramatically simplifying asynchronous
         programming in JavaScript. In this talk you will learn how you can use
         the familiar JavaScript Array methods to create surprisingly expressive
         asynchronous programs.</p>       
         <p>Using just a few functions, you will learn how to do the following: </p>
         <ul>
           <li>Declaratively build complex events out of simple events (ex. drag n’ drop)</li>
           <li>Coordinate and sequence multiple Ajax requests</li>
           <li>Reactively update UI’s in response to data changes</li>
           <li>Eliminate memory leaks caused by neglecting to unsubscribe from events</li>
           <li>Gracefully propagate and handle asynchronous exception</li>
         </ul>
        <p>In this talk we’ll be exploring the 
         <a href="http://github.com/reactive-extensions/RxJS">Reactive Extensions (RxJS) library</a>, 
         which allows us to treat events as collections. You’ll learn about how Netflix uses Rx on the
         client and the server, allowing us to build end-to-end reactive systems.
         We’ll also contrast Rx with Promises, another popular approach to
         building asynchronous programs in JavaScript.
         <a class="video-link" href="https://vimeo.com/128858567">Go watch the video of Matthew’s talk&nbsp;<span class="arr">➡</span></a>
         </p>              
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="mikealrogers"></a>
      <img class="rebel-img" src="/img/rebels/mikealrogers.png" alt="Mikeal Rogers">
      <h3 class="rebel-name ratherloud-rebel">Mikeal Rogers</h3>
      <p>Mikeal is a JS Community Organizer, director of Evangelism at DigitalOcean and a creator/curator of NodeConf & JSFest.</p>    
      <h3 class="ratherloud-heading c3">Rules for Rebels</h3>
      <p>A pragmatic primer for building new communities.</p>
      <p><a class="video-link" href="https://vimeo.com/128791528">Go watch the video of Mikeal’s talk&nbsp;<span class="arr">➡</span></a></p>
    </div>
  </li>
  <li class="group">
    <div class="rebel-bio">
      <a name="suzhinton"></a>
      <img class="rebel-img" src="/img/rebels/suzhinton.jpg" alt="Suz Hinton">
      <h3 class="rebel-name ratherloud-rebel">Suz Hinton</h3>
      <p>Suz Hinton is a JavaScript developer who likes to tinker with hardware. 
      A maker at heart, she’s no stranger to minor burns from soldering irons 
      and 3D printers. She's a regular contributor to the open source Node.js 
      electronics scene, and enjoys teaching others how to immerse themselves in the nerdiverse.</p>
      <h3 class="ratherloud-heading c3 cf">
        <span class="rwd-line">Babbling with the merfolk:</span> 
        <span class="rwd-line">between the layers</span> of JavaScript hardware</h3>
      <p>Creating robots and programming them with JavaScript has never been
         easier, with the release of open source libraries to help you do so.
         What’s bubbling under the surface of these enormously expressive
         libraries, though? Discover with me a deep world of many layers all
         working together in order to line up bits, bytes and electrical current.
         Expect an accessible story-driven exploration, which will open up new
         ways to appreciate the primitive workings of computers with language as
         literature.
         <a class="video-link" href="https://vimeo.com/129003513">Go watch the video of Suz’s talk&nbsp;<span class="arr">➡</span></a>
      </p>

    </div>
  </li>
</ul>

  </div>
</div>